/*
 * Flockr Social Proof API
 * API for sending product user actions and retrieving social proof
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@flockr.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.62
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import Flockr from '../model/Flockr';
import Product from '../model/Product';

/**
* ProductDetails service.
* @module api/ProductDetailsApi
* @version 1.0.0
*/
export default class ProductDetailsApi {

    /**
    * Constructs a new ProductDetailsApi. 
    * @alias module:api/ProductDetailsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the productVisit operation.
     * @callback moduleapi/ProductDetailsApi~productVisitCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Flockr{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * saves a product visit and returns social proof
     * By passing the details of a product visit, the social proof for that product is updagted, a product visit is counted once per session. The social proof for that product is returned 
     * @param {module:model/Product} body Details of the product visit
     * @param {String} apiKey your api key
     * @param {Object} opts Optional parameters
     * @param {String} opts.flockrDemo append this parameter with the value \&quot;true\&quot; to return demo data for testing
     * @param {module:model/String} opts.flockrFakeData append this value to return demo data of a specific proof type
     * @param {Boolean} opts.transparent if supplied as well as an image url, will define whether a transparent based image url is returned for the image with social proof applied
     * @param {module:api/ProductDetailsApi~productVisitCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    productVisit(body, apiKey, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling productVisit");
      }
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling productVisit");
      }

      let pathParams = {
        'apiKey': apiKey
      };
      let queryParams = {
        'flockrDemo': opts['flockrDemo'],'flockrFakeData': opts['flockrFakeData'],'transparent': opts['transparent']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Flockr;

      return this.apiClient.callApi(
        '/{apiKey}/product/visit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}