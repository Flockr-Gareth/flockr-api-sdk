/**
 * Flockr Social Proof API
 * API for sending product user actions and retrieving social proof
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@flockr.co
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("CartApi", () => {
  let instance: api.CartApi
  beforeEach(function() {
    instance = new api.CartApi(config)
  });

  test("cartDrawer", () => {
    const body: api.ListOnly = {
  "$ref" : "#/components/examples/list"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.cartDrawer(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("ConversionOrderApi", () => {
  let instance: api.ConversionOrderApi
  beforeEach(function() {
    instance = new api.ConversionOrderApi(config)
  });

  test("order", () => {
    const body: api.Order = {
  "$ref" : "#/components/examples/systemCallOrder"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.order(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("CustomerEventApi", () => {
  let instance: api.CustomerEventApi
  beforeEach(function() {
    instance = new api.CustomerEventApi(config)
  });

  test("event", () => {
    const body: api.Event = {
  "$ref" : "#/components/examples/systemCallEvent"
}
    const apiKey: string = "apiKey_example"
    return expect(instance.event(body, apiKey, {})).resolves.toBe(null)
  })
})

describe("ImageApi", () => {
  let instance: api.ImageApi
  beforeEach(function() {
    instance = new api.ImageApi(config)
  });

  test("image", () => {
    const apiKey: string = "apiKey_example"
    const image: string = "image_example"
    const productId: string = "productId_example"
    const visitorId: string = "visitorId_example"
    const sessionId: string = "sessionId_example"
    const host: string = "host_example"
    const location: string = "location_example"
    const transparent: boolean = true
    return expect(instance.image(apiKey, image, productId, visitorId, sessionId, host, location, transparent, {})).resolves.toBe(null)
  })
})

describe("ListApi", () => {
  let instance: api.ListApi
  beforeEach(function() {
    instance = new api.ListApi(config)
  });

  test("cartDrawer", () => {
    const body: api.ListOnly = {
  "$ref" : "#/components/examples/list"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.cartDrawer(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
  test("samplesList", () => {
    const body: api.ListOnly = {
  "$ref" : "#/components/examples/list"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.samplesList(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("PredictiveSearchApi", () => {
  let instance: api.PredictiveSearchApi
  beforeEach(function() {
    instance = new api.PredictiveSearchApi(config)
  });

  test("predictiveSearch", () => {
    const body: api.Array = {
  "value" : {
    "visitor" : {
      "id" : "51102fbc-525c-41a2-b4e1-1606e19f3f88",
      "sessionId" : "5e537d75-72ff-47df-a581-d5f0d0316062"
    },
    "products" : [ "1725", "6947", "1750", "9235", "1838", "1722", "9422", "9292", "10432", "9216", "10377", "9150", "10378", "7888", "10430", "1782", "1690", "8900", "1709", "6433", "10025", "10095", "4941", "9904" ],
    "recommendations" : [ "7456", "7123" ],
    "category" : "Bathroom Tiles",
    "device" : {
      "userAgent" : "system call"
    },
    "locale" : {
      "language" : "en"
    },
    "location" : {
      "host" : "ip address / host name"
    }
  }
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.predictiveSearch(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("ProductDetailsApi", () => {
  let instance: api.ProductDetailsApi
  beforeEach(function() {
    instance = new api.ProductDetailsApi(config)
  });

  test("productVisit", () => {
    const body: api.Product = {
  "$ref" : "#/components/examples/systemCall"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.productVisit(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("ProductListApi", () => {
  let instance: api.ProductListApi
  beforeEach(function() {
    instance = new api.ProductListApi(config)
  });

  test("categoryVisit", () => {
    const body: api.Array = {
  "value" : {
    "visitor" : {
      "id" : "51102fbc-525c-41a2-b4e1-1606e19f3f88",
      "sessionId" : "5e537d75-72ff-47df-a581-d5f0d0316062"
    },
    "products" : [ "1725", "6947", "1750", "9235", "1838", "1722", "9422", "9292", "10432", "9216", "10377", "9150", "10378", "7888", "10430", "1782", "1690", "8900", "1709", "6433", "10025", "10095", "4941", "9904" ],
    "recommendations" : [ "7456", "7123" ],
    "category" : "Bathroom Tiles",
    "device" : {
      "userAgent" : "system call"
    },
    "locale" : {
      "language" : "en"
    },
    "location" : {
      "host" : "ip address / host name"
    }
  }
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.categoryVisit(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("ProductRecommendationsApi", () => {
  let instance: api.ProductRecommendationsApi
  beforeEach(function() {
    instance = new api.ProductRecommendationsApi(config)
  });

  test("productRecommendations", () => {
    const body: api.ListOnly = {
  "$ref" : "#/components/examples/list"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.productRecommendations(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

describe("SamplesApi", () => {
  let instance: api.SamplesApi
  beforeEach(function() {
    instance = new api.SamplesApi(config)
  });

  test("samplesList", () => {
    const body: api.ListOnly = {
  "$ref" : "#/components/examples/list"
}
    const apiKey: string = "apiKey_example"
    const flockrDemo: string = "flockrDemo_example"
    const flockrFakeData: string = "flockrFakeData_example"
    return expect(instance.samplesList(body, apiKey, flockrDemo, flockrFakeData, {})).resolves.toBe(null)
  })
})

