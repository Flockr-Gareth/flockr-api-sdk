/*
 * Flockr Social Proof API
 * API for sending product user actions and retrieving social proof
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@flockr.co
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Request;
import io.swagger.client.model.RequestDevice;
import io.swagger.client.model.RequestLocale;
import io.swagger.client.model.RequestLocation;
import io.swagger.client.model.RequestVisitor;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * List
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-10-11T13:43:34.865069393Z[GMT]")

public class List extends Request {
  @SerializedName("category")
  private String category = null;

  @SerializedName("products")
  private List<String> products = new ArrayList<String>();

  @SerializedName("recommendations")
  private List<String> recommendations = null;

  @SerializedName("images")
  private Map<String, String> images = null;

  public List category(String category) {
    this.category = category;
    return this;
  }

   /**
   * The category of the products - should not be an empty string
   * @return category
  **/
  @Schema(example = "Bathroom Tiles", required = true, description = "The category of the products - should not be an empty string")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public List products(List<String> products) {
    this.products = products;
    return this;
  }

  public List addProductsItem(String productsItem) {
    this.products.add(productsItem);
    return this;
  }

   /**
   * An array of product IDs, also accepts an array of altIds, e.g. [{altId:\&quot;abcdefg\&quot;}]
   * @return products
  **/
  @Schema(example = "[\"1725\",\"8647\",\"1750\",\"9325\"]", required = true, description = "An array of product IDs, also accepts an array of altIds, e.g. [{altId:\"abcdefg\"}]")
  public List<String> getProducts() {
    return products;
  }

  public void setProducts(List<String> products) {
    this.products = products;
  }

  public List recommendations(List<String> recommendations) {
    this.recommendations = recommendations;
    return this;
  }

  public List addRecommendationsItem(String recommendationsItem) {
    if (this.recommendations == null) {
      this.recommendations = new ArrayList<String>();
    }
    this.recommendations.add(recommendationsItem);
    return this;
  }

   /**
   * Optional list of product IDs to fetch proof values for (can be requested on a dedicated call instead if required)
   * @return recommendations
  **/
  @Schema(example = "[7654,3456]", description = "Optional list of product IDs to fetch proof values for (can be requested on a dedicated call instead if required)")
  public List<String> getRecommendations() {
    return recommendations;
  }

  public void setRecommendations(List<String> recommendations) {
    this.recommendations = recommendations;
  }

  public List images(Map<String, String> images) {
    this.images = images;
    return this;
  }

  public List putImagesItem(String key, String imagesItem) {
    if (this.images == null) {
      this.images = new HashMap<String, String>();
    }
    this.images.put(key, imagesItem);
    return this;
  }

   /**
   * Anoptional map of productIds to image URL, if supplied Flockr will return an image URL for the social proof alon with the social proof values
   * @return images
  **/
  @Schema(example = "{\"1725\":\"https://www.toppstiles.co.uk/static/media/catalog/product/c/a/634119_metro-white-tile_7.jpg\"}", description = "Anoptional map of productIds to image URL, if supplied Flockr will return an image URL for the social proof alon with the social proof values")
  public Map<String, String> getImages() {
    return images;
  }

  public void setImages(Map<String, String> images) {
    this.images = images;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    List list = (List) o;
    return Objects.equals(this.category, list.category) &&
        Objects.equals(this.products, list.products) &&
        Objects.equals(this.recommendations, list.recommendations) &&
        Objects.equals(this.images, list.images) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, products, recommendations, images, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class List {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    recommendations: ").append(toIndentedString(recommendations)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
